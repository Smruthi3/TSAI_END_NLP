# -*- coding: utf-8 -*-
"""Assignment8_part2_python_programs.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1L3UkCJFHDkuGHoibhSFxZVESxbw0NUrz
"""

##  write a python function to convert given variable to said datatype

def type_conversion(typ,a):
  if(typ)=='int':
    return(int(a))
  elif(typ)=='float':
    return(float(a))
  else:
    return(str(a))

type_conversion('str',1)

##  Write a python class to welcome 

class Welcome(object):

    # Constructor
    def __init__(self, name):
        self.name = name  # Create an instance variable

    # Instance method
    def welcome(self, up=False):
        if up:
            print('Hi, %s!' % self.name.upper())
        else:
            print('Hey, %s' % self.name)

w = Welcome('Geeta')           
w.welcome(up=True)

## 3. Write a program to reverse dictionary key order

sample_dict = {1:'Hi',2:'Hello',3:'Hey'}

print("The original dictionary : " + str(sample_dict)) 

res = dict(reversed(list(sample_dict.items()))) 

print("The reversed order dictionary : " + str(res))

## Write a program to reverse the key and item mapping

sample_dict = {1:'Seeta',2:'Geeta',3:'Babita'}

print("The original dictionary : " + str(sample_dict)) 

sample_dict = {v:k for k, v in sample_dict.items()}

print("Inverse mapped dictionary : ", str(sample_dict))

# Write a program to generate the Fibonacci sequence up to n-th term

nterms = int(10000)

# first two terms
n1, n2 = 0, 1
count = 0
fab_list = []
# check if the number of terms is valid
if nterms <= 0:
   print("Please enter a positive integer")
elif nterms == 1:
   print("Fibonacci sequence upto",nterms,":")
   print(n1)
else:
   while count < nterms:
       #print(n1)
       fab_list.append(n1)
       nth = n1 + n2
       # update values
       n1 = n2
       n2 = nth
       count += 1

fn = lambda x: "FIBONACCI" if x in fab_list else "NOT_FIBONACCI"

print("Given number is",fn(20))

# Write a python function to add 2 iterables a and b such that a is even and b is odd

n=10
a = []
b = []
_ = [a.append(i) if i%2==0 else b.append(i) for i in range(n)]

def add(a,b):
    return [a+b for a,b in (zip(a,b))]

add(a,b)

# 6. Write a program to strips every vowel from a string provided 

vowels = ('a', 'e', 'i', 'o', 'u')
input_string = "hello"

print('Vowel in a string',' '.join([x for x in input_string.lower() if x not in vowels]))

# Write a python function that takes a small character string and shifts all characters by 5 

def shift_n_letters(letter, n):
    return chr((ord(letter) - 97 + n % 26) % 26 + 97) if ord(letter)>=97 else chr((ord(letter) - 65 + n % 26) % 26 + 65)

name = "hello"

res="".join([shift_n_letters(x,5) for x in name])

print('Resulting string',res)

# Write a python function to  add only even numbers in a list

from functools import reduce

input_list = [x for x in range(100)]

def sum_even(it):
    return reduce(lambda x, y: x + y if (y % 2)==0 else x, it, 0)

res=sum_even(input_list)

print('Sum of even numbers in the list is ', res)

# write a program to  adds every 5th number in a list
input_list = [x for x in range(20)]

res=reduce((lambda x, y: x + y), [val for idx, val in enumerate(input_list) if (idx+1)%5==0]) 
print('Sum of every 5th element in the list is', res)

# Write a python function to identify type of given data structure

def ds_type(ds):
  return(type(ds))

l=[1,2,3,4]
ds_type(l)

# Write a python function to remove duplicates from list

def remove_duplicates(lista):
    lista2 = []
    if lista: 
        for item in lista:
            if item not in lista2: #is item in lista2 already?
                lista2.append(item)
    else:
        return lista
    return lista2
print("List with duplicates removed:",remove_duplicates([1,2,3,3]))

#  Write a python function get unique value from tuple

def unique_values(v):
    return(list(set(v)))

t=[(1,2),(3,4),(4,3),(1,2)]

unique_values(t)

#  write a program to convert temperature from Celsius to Fahrenheit

Cel = 90
 
Far = 9.0/5.0 * Cel + 32
 
print("Temperature:", Cel, "Celsius = ", Far, " F")

# Write a program to convert kilometers per hour to mile per hour

kmh = 16
mph =  0.6214 * kmh
print("Speed:", kmh, "KM/H = ", mph, "MPH")

# Write a python function to find greatest common divisor

def greatest_common_divisor(x,y):
    print("For", x, "and", y,"," ) 
    r=x%y
    while r>0:
        r=x%y
        if r ==0: 
            print("the greatest common divisor is", y,".")
        else:
            q=y
            x=q
            y=r

greatest_common_divisor(1071,1029)

#  Write a program to check your external ip address

import re
import requests

url = "http://checkip.dyndns.org"
request = requests.get(url)
clean = request.text.split(': ', 1)[1]
your_ip = clean.split('</body></html>', 1)[0]

print("your IP Address is: ",  your_ip)

#  Write a python function to generate a random password

import random

LOWERCASE_CHARS = tuple(map(chr, range(ord('a'), ord('z')+1)))
UPPERCASE_CHARS = tuple(map(chr, range(ord('A'), ord('Z')+1)))
DIGITS = tuple(map(str, range(0, 10)))
SPECIALS = ('!', '@', '#', '$', '%', '^', '&', '*')

SEQUENCE = (LOWERCASE_CHARS,
            UPPERCASE_CHARS,
            DIGITS,
            SPECIALS,
            )

def generate_random_password(total, sequences):
    r = _generate_random_number_for_each_sequence(total, len(sequences))

    password = []
    for (population, k) in zip(sequences, r):
        n = 0
        while n < k:
            position = random.randint(0, len(population)-1)
            password += population[position]
            n += 1
    random.shuffle(password)
    
    while _is_repeating(password):
        random.shuffle(password)
        
    return ''.join(password)

def _generate_random_number_for_each_sequence(total, sequence_number):
    """ Generate random sequence with numbers (greater than 0).
        The number of items equals to 'sequence_number' and
        the total number of items equals to 'total'
    """
    current_total = 0
    r = []
    for n in range(sequence_number-1, 0, -1):
        current = random.randint(1, total - current_total - n)
        current_total += current
        r.append(current)
    r.append(total - sum(r))
    random.shuffle(r)

    return r

def _is_repeating(password):
    """ Check if there is any 2 characters repeating consecutively """
    n = 1
    while n < len(password):
        if password[n] == password[n-1]:
            return True
        n += 1
    return False

if __name__ == '__main__':
    print(generate_random_password(random.randint(6, 30), SEQUENCE))

#  Write a python function to get a user name from prompt

#get the username from a prompt
username = input("Login: >> ")

#list of allowed users
user1 = "Ram"
user2 = "Mohan"

#control that the user belongs to the list of allowed users
if username == user1:
    print("Access granted")
elif username == user2:
    print("Welcome to the system")
else:
    print("Access denied")

# Write a python function to convert hours to either mins or seconds

def convert_to_minutes(num_hours):
    '''(int) -> int
    Return the number of minutes there are in
    num_hours hours.
    '''
    minutes = num_hours * 60
    return minutes

def convert_to_seconds(num_hours):
    '''(int) -> int
    Return the number of seconds there are in 
    num_hours hours.
    '''
    minutes = convert_to_minutes(num_hours)
    seconds = minutes * 60
    return seconds


min = convert_to_minutes(1)
print(min)

seconds = convert_to_seconds(1)
print(seconds)

# Write python function role a dice

import random
min = 1
max = 6

roll_again = "yes"

while roll_again == "yes" or roll_again == "y":
    print("Rolling the dices...")
    print("The values are....")
    print(random.randint(min, max))
    print(random.randint(min, max))

    roll_again = input("Roll the dices again?")

# Write a program to reverse a number

n=int(input("Enter number: "))
rev=0
while(n>0):
    dig=n%10
    rev=rev*10+dig
    n=n//10
print("Reverse of the number:",rev)

# Write a program to take an average of given scores
s1=50
s2=77
s3=87

print('Avg score is',(s1+s2+s3)/3)

# Write a python program to print odd numbers in given range
lower=int(input("Enter the lower limit for the range:"))
upper=int(input("Enter the upper limit for the range:"))
for i in range(lower,upper+1):
    if(i%2!=0):
        print(i)

# Write a python program print all the integers that arenâ€™t divisible by either 2 or 3 and lies between 1 and 25.
for i in range(0,25):
    if(i%2!=0 and i%3!=0):
        print(i)

# Write a program to concatinate two strings

# Python String Operations
str1 = 'Good'
str2 ='Morning!'

# using +
print('str1 + str2 = ', str1 + str2)

# using *
print('str1 * 3 =', str1 * 3)

# Write python function to convert a given string to either lower, upper and capitalize

def string_opertaion(st,conversion):
  if(conversion=='lower'):
    return(st.lower())
  elif(conversion=='upper'):
    return(st.upper())
  else:
    return(st.capitalize())

string_opertaion('AwesOME',None)

# Write a program to get 3rd and last character of a given string

string="Good Night"
print("\nSlicing characters between " +
    "3rd and last character: ") 
print(string[3:-1])

# Write a program to delete a 3rd character from a given string 

String='welcome'

new_str = "" 
  
for i in range(len(String)): 
    if i != 2: 
        new_str = new_str + String[i] 

print(new_str)

# Write a program to replace a string by a given string #in a sentence

string = 'This is beautiful picture'

string.replace('beautiful','good')

# Write a program to reverse a string

string = 'Today is bad day'
string[::-1]

# Write a python function to append or extend two lists


def list_op(l1,l2,op):
  if(op=='append'):
    return(l1.append(l2))
  else:
    return(l1.extend(l2))
  
a = ['Hey', 'you', 'there!']
b = [1,2,3]
op='e'

list_op(a,b,op)

print(a)